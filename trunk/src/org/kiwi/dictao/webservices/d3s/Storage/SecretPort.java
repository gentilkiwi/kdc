
package org.kiwi.dictao.webservices.d3s.Storage;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "SecretPort", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2/Storage")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SecretPort {


    /**
     * 
     * @param depositProof
     * @param securityToken
     * @return
     *     returns org.kiwi.dictao.webservices.d3s.Storage.ReadResponse
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:read")
    @WebResult(name = "readResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage")
    @RequestWrapper(localName = "read", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.Read")
    @ResponseWrapper(localName = "readResponseContent", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.ReadResponseContent")
    public ReadResponse read(
        @WebParam(name = "securityToken", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        SAMLToken securityToken,
        @WebParam(name = "depositProof", targetNamespace = "")
        DepositProof depositProof)
        throws EnvironmentFaultException, UserFaultException
    ;

    /**
     * 
     * @param containerPath
     * @param securityToken
     * @param data
     * @param motivation
     * @param metadatas
     * @param certificates
     * @param applicantPath
     * @return
     *     returns java.lang.String
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:write")
    @WebResult(name = "resourcePath", targetNamespace = "")
    @RequestWrapper(localName = "write", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.Write")
    @ResponseWrapper(localName = "writeResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.WriteResponse")
    public String write(
        @WebParam(name = "applicantPath", targetNamespace = "")
        String applicantPath,
        @WebParam(name = "motivation", targetNamespace = "")
        String motivation,
        @WebParam(name = "containerPath", targetNamespace = "")
        String containerPath,
        @WebParam(name = "securityToken", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        SAMLToken securityToken,
        @WebParam(name = "certificates", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Certificates certificates,
        @WebParam(name = "metadatas", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Metadatas metadatas,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data)
        throws EnvironmentFaultException, UserFaultException
    ;

    /**
     * 
     * @param resourcePath
     * @param securityToken
     * @param data
     * @param motivation
     * @param metadatas
     * @param certificates
     * @param applicantPath
     * @return
     *     returns java.lang.String
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:update")
    @WebResult(name = "updatedResourcePath", targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.UpdateResponse")
    public String update(
        @WebParam(name = "applicantPath", targetNamespace = "")
        String applicantPath,
        @WebParam(name = "motivation", targetNamespace = "")
        String motivation,
        @WebParam(name = "resourcePath", targetNamespace = "")
        String resourcePath,
        @WebParam(name = "securityToken", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        SAMLToken securityToken,
        @WebParam(name = "certificates", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Certificates certificates,
        @WebParam(name = "metadatas", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Metadatas metadatas,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data)
        throws EnvironmentFaultException, UserFaultException
    ;

    /**
     * 
     * @param resourcePath
     * @param securityToken
     * @param motivation
     * @param applicantPath
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:delete")
    @RequestWrapper(localName = "delete", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.DeleteResponse")
    public void delete(
        @WebParam(name = "applicantPath", targetNamespace = "")
        String applicantPath,
        @WebParam(name = "motivation", targetNamespace = "")
        String motivation,
        @WebParam(name = "resourcePath", targetNamespace = "")
        String resourcePath,
        @WebParam(name = "securityToken", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        SAMLToken securityToken)
        throws EnvironmentFaultException, UserFaultException
    ;

    /**
     * 
     * @param depositProof
     * @param securityToken
     * @return
     *     returns java.lang.String
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:openForRead")
    @WebResult(name = "url", targetNamespace = "")
    @RequestWrapper(localName = "openForRead", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.OpenForRead")
    @ResponseWrapper(localName = "openForReadResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.OpenForReadResponse")
    public String openForRead(
        @WebParam(name = "securityToken", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        SAMLToken securityToken,
        @WebParam(name = "depositProof", targetNamespace = "")
        DepositProof depositProof)
        throws EnvironmentFaultException, UserFaultException
    ;

    /**
     * 
     * @param containerPath
     * @param securityToken
     * @param motivation
     * @param metadatas
     * @param certificates
     * @param applicantPath
     * @return
     *     returns java.lang.String
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:openForWrite")
    @WebResult(name = "url", targetNamespace = "")
    @RequestWrapper(localName = "openForWrite", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.OpenForWrite")
    @ResponseWrapper(localName = "openForWriteResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.OpenForWriteResponse")
    public String openForWrite(
        @WebParam(name = "applicantPath", targetNamespace = "")
        String applicantPath,
        @WebParam(name = "motivation", targetNamespace = "")
        String motivation,
        @WebParam(name = "containerPath", targetNamespace = "")
        String containerPath,
        @WebParam(name = "securityToken", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        SAMLToken securityToken,
        @WebParam(name = "certificates", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Certificates certificates,
        @WebParam(name = "metadatas", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Metadatas metadatas)
        throws EnvironmentFaultException, UserFaultException
    ;

    /**
     * 
     * @param resourcePath
     * @param securityToken
     * @param motivation
     * @param metadatas
     * @param certificates
     * @param applicantPath
     * @return
     *     returns java.lang.String
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:openForUpdate")
    @WebResult(name = "url", targetNamespace = "")
    @RequestWrapper(localName = "openForUpdate", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.OpenForUpdate")
    @ResponseWrapper(localName = "openForUpdateResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.OpenForUpdateResponse")
    public String openForUpdate(
        @WebParam(name = "applicantPath", targetNamespace = "")
        String applicantPath,
        @WebParam(name = "motivation", targetNamespace = "")
        String motivation,
        @WebParam(name = "resourcePath", targetNamespace = "")
        String resourcePath,
        @WebParam(name = "securityToken", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        SAMLToken securityToken,
        @WebParam(name = "certificates", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Certificates certificates,
        @WebParam(name = "metadatas", targetNamespace = "http://www.dictao.com/d3s/xsd/v2010_10/Common")
        Metadatas metadatas)
        throws EnvironmentFaultException, UserFaultException
    ;

    /**
     * 
     * @param url
     * @throws UserFaultException
     * @throws EnvironmentFaultException
     */
    @WebMethod(action = "Secret:close")
    @RequestWrapper(localName = "close", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.Close")
    @ResponseWrapper(localName = "closeResponse", targetNamespace = "http://www.dictao.com/d3s/wsdl/v2.1/Storage", className = "org.kiwi.dictao.webservices.d3s.Storage.CloseResponse")
    public void close(
        @WebParam(name = "url", targetNamespace = "")
        String url)
        throws EnvironmentFaultException, UserFaultException
    ;

}
